/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
     public void connect(TreeLinkNode root) {
        List<TreeLinkNode> queue = new ArrayList<>();
        if(root==null)
            return;
        queue.add(root);
        while(!queue.isEmpty()){
            TreeLinkNode curr1=null,curr2=null;
            int size = queue.size()-1;
            for(int i=0;i<size;i++){
                curr1 = queue.get(0);
                curr2 = queue.get(1);
                if(curr2==null){
                    TreeLinkNode temp = queue.remove(1);
                    continue;
                }
                if(curr1!=null){
                    curr1.next = curr2;
                    queue.add(curr1.left);
                    queue.add(curr1.right);  
                    queue.remove(0);
                }
            }
            if(queue.size()>0)
            {
                TreeLinkNode curr = queue.remove(0);
                if(curr!=null){
                    curr.next = null;
                    queue.add(curr.left);
                    queue.add(curr.right);  
                }
            }
        }
    }
}
