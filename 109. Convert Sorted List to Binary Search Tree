/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        int len = 0;
        ListNode counter = head;
        while(counter!=null){
            len++;
            counter = counter.next;
        }
        if(len == 0)
            return null;
        if(len == 1)
            return new TreeNode(head.val);
        ListNode traverse = head,prev= null;
        if(len%2 == 0){
            for(int i=0;i<len/2-1;i++){
                prev = traverse;
                traverse = traverse.next;
            }
        }
        else{
            for(int i=0;i<len/2;i++){
                prev = traverse;
                traverse = traverse.next;
            }
        }
       
        ListNode rightlist = null,leftlist = null;
        
        if(prev!=null){
            prev.next = null;
            leftlist = head;
        }
           rightlist = traverse.next;
        
        ListNode current = traverse;
        
        TreeNode root = new TreeNode(current.val);
        
        root.left = sortedListToBST(leftlist);
        root.right = sortedListToBST(rightlist);
        return root;
    }
}
